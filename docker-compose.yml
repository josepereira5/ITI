version: '3'

networks:
  mynetwork:
    external: true

volumes:
  smb-volume:
    driver: local
    driver_opts:
      type: cifs
      device: //192.168.173.188/ITI

services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
      - "8083:8080"  # Traefik dashboard
    networks:
      - mynetwork
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  prometheus-adapter:
    build:
      context: ./python_file
    ports:
      - "8081:8081"
    networks:
      - mynetwork

  client:
    build:
      context: ./python_file2
    ports:
      - "8082:8082"
    networks:
      - mynetwork
        
  pdfer-app:
    build:
      context: .
    ports:
      - "8080:8080"
    networks:
      - mynetwork
    #volumes:
     # - smb-volume:/server/store
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pdfer-app.rule=Host(`192.168.217.128`)"  # Replace with your domain
      - "traefik.http.services.pdfer-app.loadbalancer.server.port=8080"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8084:8080"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/dev/disk/:/dev/disk:ro"
    privileged: true
    devices:
      - "/dev/kmsg"
    networks:
      - mynetwork

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus:latest
    user: 0:0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - mynetwork
      
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    user: 0:0
    volumes:
      - ./grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - 3000:3000
    networks:
      - mynetwork
