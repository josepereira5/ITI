version: '3'


volumes:
  prometheus_data: {}

services:
  pdfer-app:
    build:
      context: .
    ports:
      - "8080:8080"  # Mapeia a porta do aplicativo
    networks:
      - mynetwork

  prometheus-adapter:
      build:
        context: ./python_file # Substitua pelo caminho correto para o diretório do seu serviço Python
      ports:
        - "8081:8081"  # Mapeia a porta do serviço Python
      networks:
        - mynetwork
        
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8084:8084
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Mapeia o arquivo de configuração do Prometheus
      - ./data/prometheus:/etc/prometheus
      
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"  # Especifica o arquivo de configuração
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"  # Mapeia a porta do Prometheus
    networks:
      - mynetwork
      
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    environment:
      -  GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - 3000:3000
    networks:
      - mynetwork

networks:
  mynetwork:




